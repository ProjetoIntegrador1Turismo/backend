Comandos relevantes:

GERAR O JAR DA APLICAÇÃO:

    Abrir o terminal da pasta raiz do projeto. O jar será criado automaticamente na pasta target.
    Comando: ./mvnw clean install -DskipTests


GERAR A IMAGEM DA APLICAÇÃO:

    Criar o arquivo Dockerfile na raiz do projeto e abrir o terminal lá;
    Comando: docker build -t nomeQueQueroDar .


SUBIR O CONTAINER:

    Docker run -p portaHost:portaContainer nomeDaImagem
    -d para rodar em segundo plano e não travar o terminal
    -p faz o mapeamento das portas (host/container)
    --name atribui um nome ao container

CRIAR UM VOLUME NO HOST P/ OS CONTAINERS PERSISTIREM OS DADOS

    docker volume create nome_do_volume

SUBIR UM CONTAINER POSTGRE

    docker run -d -p 5432:5432 -v "nome_do_volume:/var/lib/postgresql/data" -e POSTGRES_PASSWORD=postgres -e PRIMARY_USER=postgres postgres

    docker run -d -p 5432:5432 -v "roteiro_volume:/var/lib/postgresql/data" --name db_roteiro -e PRIMARY_USER=postgres postgres

    docker run -d -p 5432:5432 -v "roteiro_volume:/var/lib/postgresql/data" --name db_roteiro -e POSTGRES_USER=admin -e POSTGRES_PASSWORD=admin postgres


COMANDO PARA CRIAR O CONTAINER LOCAL JÁ COM AS CONFIGURAÇÕES DO YML
docker run --name roteirodb -p 3307:3306 -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_DATABASE=roteiro -e MYSQL_USER=projeto -e MYSQL_PASSWORD=12345 -d mysql:latest

